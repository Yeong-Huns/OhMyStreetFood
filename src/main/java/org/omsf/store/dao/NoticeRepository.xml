<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.omsf.store.dao.NoticeRepository">
	<resultMap id="noticeResultMap" type="org.omsf.store.model.Notice">
	    <id property="noticeNo" column="NOTICENO"/>
	    <result property="content" column="CONTENT"/>
	    <result property="createdAt" column="CREATEDAT"/>
	    <result property="storeNo" column="STORE_STORENO"/>
	    <result property="title" column="TITLE"/>
	</resultMap>
	
	<resultMap id="noticeStatusResultMap" type="org.omsf.store.model.UserNoticeStatus">
	    <id property="noticeStatusNo" column="NOTICESTATUSNO"/>
	    <result property="isRead" column="ISREAD"/>
	    <result property="isDeleted" column="ISDELETED"/>
	    <result property="noticeNo" column="NOTICE_NOTICENO"/>
	    <result property="username" column="MEMBER_USERNAME"/>
	</resultMap>
	
	
	<insert id="createNotice">
    	INSERT INTO NOTICE (TITLE, CONTENT, STORE_STORENO, CREATEDAT)
    	VALUES (#{title}, #{content}, #{storeNo}, #{createdAt})
    	<selectKey keyProperty="noticeNo" resultType="int" order="AFTER">
        	SELECT NOTICE_SEQ.CURRVAL FROM DUAL
    	</selectKey>
    </insert>
    
    <insert id="sendToSubscriber">
    	INSERT INTO USERNOTICESTATUS (NOTICE_NOTICENO, MEMBER_USERNAME)
    	VALUES (#{noticeNo}, #{username})
    	<selectKey keyProperty="noticeStatusNo" resultType="int" order="AFTER">
       		SELECT USERNOTICESTATUS_SEQ.CURRVAL FROM DUAL
  		</selectKey>
    </insert>
    
    <select id="findNoticesByUsername" resultType="org.omsf.store.model.NoticeDto$NoticeDetailResponse">
    	 SELECT
            n.NOTICENO AS noticeNo,
            n.TITLE AS title,
            n.CONTENT AS content,
            ns.ISREAD AS isRead,
            ns.ISDELETED AS isDeleted,
            ns.MEMBER_USERNAME AS memberUsername,
            n.CREATEDAT AS createdAt
        FROM
            NOTICE n
            JOIN USERNOTICESTATUS ns ON n.NOTICENO = ns.NOTICE_NOTICENO
        WHERE
            ns.MEMBER_USERNAME = #{username}
            AND ns.ISDELETED = 0
        ORDER BY
            n.CREATEDAT DESC
        OFFSET #{page.offset} ROWS
        FETCH NEXT #{page.pageSize} ROWS ONLY
    </select>
	
	<update id="markNoticeAsRead">
		UPDATE USERNOTICESTATUS
		SET ISREAD = 1
		WHERE NOTICENO = #{noticeNo};
	</update>
	
	<update id="markNoticeAsDeleted">
		UPDATE USERNOTICESTATUS
		SET ISDELETED = 1
		WHERE NOTICENO = #{noticeNo}; 
	</update>
	
</mapper>