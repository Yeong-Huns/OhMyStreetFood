<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="org.omsf.store.dao.StoreRepository">
	
  	<resultMap id="storeResultMap" type="org.omsf.store.model.Store">
	    <id property="storeNo" column="STORENO"/>
	    <result property="storeName" column="STORENAME"/>
	    <result property="latitude" column="LATITUDE"/>
	    <result property="longitude" column="LONGITUDE"/>
	    <result property="address" column="ADDRESS"/>
	    <result property="introduce" column="INTRODUCE"/>
	    <result property="operatingDate" column="OPERATINGDATE"/>
	    <result property="operatingHours" column="OPERATINGHOURS"/>
	    <result property="totalReview" column="TOTALREVIEW"/>
	    <result property="totalRating" column="TOTALRATING"/>
	    <result property="likes" column="LIKES"/>
	    <result property="createdAt" column="CREATEDAT"/>
	    <result property="modifiedAt" column="MODIFIEDAT"/>
	    <result property="username" column="MEMBER_USERNAME"/>
	    <result property="picture" column="PICTURE"/>
	</resultMap>
	 <resultMap id="photoResultMap" type="org.omsf.store.model.Photo">
        <id property="photoNo" column="PHOTONO"/>
        <result property="contentType" column="CONTENTTYPE"/>
        <result property="fileSize" column="FILESIZE"/>
        <result property="picture" column="PICTURE"/>
        <result property="createdAt" column="CREATEDAT"/>
        <result property="storeNo" column="STORE_STORENO" jdbcType="NUMERIC"/> 
        <result property="username" column="USERNAME"/> 
    </resultMap>

<!--   <select id="getStoreByposition" resultType="org.omsf.store.model.Store"> -->
<!--   	<bind name="pattern" value="'%' + position + '%'" /> -->
<!--   	SELECT * FROM STORE WHERE ADDRESS LIKE #{pattern} -->
<!--   	SELECT -->
<!--   		STORENO AS "storeNo", -->
<!--   		STORENAME AS "storeName", -->
<!--   		LATITUDE AS "latitude", -->
<!--   		LONGITUDE AS "longitude", -->
<!--   		ADDRESS AS "address", -->
<!--   		INTRODUCE AS "introduce", -->
<!--   		OPERATINGDATE AS "operatingDate", -->
<!--   		OPERATINGHOURS AS "operatingHours", -->
<!--   		TOTALREVIEW AS "totalReview", -->
<!--   		TOTALRATING AS "totalRating", -->
<!--   		LIKES AS "likes", -->
<!--   		CREATEDAT AS "createdAt", -->
<!--   		MODIFIEDAT AS "modifiedAt", -->
<!--   		MEMBER_USERNAME AS "username", -->
<!--   		PICTURE AS "picture" -->
<!--   	FROM STORE -->
<!--   	WHERE ADDRESS LIKE #{pattern} -->
<!--   </select> -->
  
  <insert id="createStore" parameterType="org.omsf.store.model.Store">
        INSERT INTO store
        (
        	storeNo,
            storeName,
            latitude,
            longitude,
            address,
            createdAt,
            <trim suffixOverrides=",">
                MEMBER_USERNAME,
                <if test="picture != null">picture,</if>
                <if test="introduce != null">introduce,</if>
                <if test="operatingDate != null">operatingDate,</if>
                <if test="operatingHours != null">operatingHours,</if>
                <if test="totalReview != null">totalReview,</if>
                <if test="totalRating != null">totalRating,</if>
                <if test="likes != null">likes,</if>
            </trim>
        )
        VALUES
        (
        	STORE_SEQ.NEXTVAL,
            #{storeName},
            #{latitude},
            #{longitude},
            #{address},
            sysdate,
            <trim suffixOverrides=",">
                #{username},
                <if test="picture != null">#{picture},</if> 
                <if test="introduce != null">#{introduce},</if>
                <if test="operatingDate != null">#{operatingDate},</if>
                <if test="operatingHours != null">#{operatingHours},</if>
                <if test="totalReview != null">#{totalReview},</if>
                <if test="totalRating != null">#{totalRating},</if>
                <if test="likes != null">#{likes},</if>
            </trim>
        )
        <selectKey keyProperty="storeNo" resultType="int" order="AFTER">
       		SELECT STORE_SEQ.CURRVAL FROM DUAL
  		</selectKey>
    </insert>	
    
	<insert id="createPhoto" parameterType="org.omsf.store.model.Photo">
    INSERT INTO PHOTO 
    (	
    	PHOTONO,
        CONTENTTYPE,
        FILESIZE,
        PICTURE,
        CREATEDAT,
        STORE_STORENO,
        USERNAME
    )
    VALUES
    (	
    	PHOTO_SEQ.NEXTVAL,
        #{contentType},
        #{fileSize},
        #{picture},
        sysdate,
        #{storeNo},
        #{username}
    )
   		 <selectKey keyProperty="photoNo" resultType="int" order="AFTER">
       		SELECT PHOTO_SEQ.CURRVAL FROM DUAL
  		</selectKey>
	</insert>
	<select id="getPhotoByPhotoNo">
		SELECT * FROM PHOTO 
		WHERE PHOTONO = #{photoNo}
	</select>
	<select id="getStorePhotos">
		SELECT * FROM PHOTO 
		WHERE STORE_STORENO = #{storeNo}
		ORDER BY PHOTONO
	</select>
	<select id="getStoreGallery">
		SELECT * FROM PHOTO 
		WHERE STORE_STORENO = #{storeNo}
		<if test="picture != null">
        	AND PHOTONO != #{picture}
    	</if>
    	ORDER BY PHOTONO
	</select>
	
	<update id="deletePhoto" parameterType="int">
		DELETE PHOTO WHERE PHOTONO = #{photoNo}
	</update>
	<update id="updatePhoto">
	    UPDATE PHOTO
	    SET 
	        contentType = #{contentType},
	        fileSize = #{fileSize},
	        picture = #{picture},
	        createdAt = sysdate,
	        USERNAME = #{username}
	    WHERE photoNo = #{photoNo}
	</update>

	<update id="updateStore">
	    UPDATE STORE
	    SET
	        STORENAME = #{storeName},
	        LATITUDE = #{latitude},
	        LONGITUDE = #{longitude},
	        ADDRESS = #{address},
	        INTRODUCE = #{introduce},
	        OPERATINGDATE = #{operatingDate},
	        OPERATINGHOURS = #{operatingHours},
	        MODIFIEDAT = sysdate,
	        PICTURE = #{picture, jdbcType=NUMERIC}
	    WHERE
	        STORENO = #{storeNo}
	</update>
	
	<update id="updatePicture">
	    UPDATE STORE
	    SET
	        PICTURE = #{picture, jdbcType=NUMERIC}
	    WHERE
	        STORENO = #{storeNo}
	</update>
<!-- 	<update id="deleteStore" parameterType="int"> -->
<!-- 	      DELETE FROM store -->
<!--     		WHERE storeNo = #{storeNo} -->
<!-- 	</update> -->
	
	<update id="updateTotalReviewAndRating">
	    UPDATE STORE
	     SET
	        TOTALREVIEW = #{totalReview},
	        TOTALRATING = #{totalRating}
	     WHERE
	        STORENO = #{storeNo}
	</update>
	<update id="updateLikes">
	    UPDATE STORE
	     SET
	        LIKES = #{likes},
	     WHERE
	        STORENO = #{storeNo}
	</update>
	
	<select id="getStoreByposition" parameterType="String" resultMap="storeResultMap">
		SELECT *
		FROM STORE
		WHERE ADDRESS LIKE #{address}
	</select>
	<select id="selectAllStore" resultMap="storeResultMap">
		SELECT *
		FROM STORE
	</select>
	<select id="getStoreList" resultMap="storeResultMap">
	    SELECT *
	    FROM STORE
	    WHERE 1=1
	    <if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
	            AND ${searchType} LIKE '%' || #{keyword} || '%'
	    </if>
	    <if test="orderType != null and orderType != ''">
	        ORDER BY ${orderType} ${sortOrder}
	    </if>
	    OFFSET #{startRow} ROWS FETCH NEXT #{sizePerPage} ROWS ONLY
	</select>
	
	<!-- jaeeun -->
	
	<select id="getPopularStores" resultType="org.omsf.store.model.Store">
		SELECT * FROM STORE 
		ORDER BY totalReview DESC, totalRating DESC, likes DESC
		FETCH FIRST 10 ROWS ONLY
	</select>

	<select id="getStoreByNo" parameterType="int" resultMap="storeResultMap">
		SELECT * FROM STORE WHERE STORENO = #{storeNo}
	</select>
	
	<select id="showStoreList" parameterType="map" resultType="org.omsf.store.model.StoreDistance">
	    SELECT s.*, TRUNC(SDO_GEOM.SDO_DISTANCE(
	               SDO_CS.TRANSFORM(SDO_GEOMETRY(2001, 4326, SDO_POINT_TYPE(#{longitude}, #{latitude}, NULL), NULL, NULL), 32652),
	               SDO_CS.TRANSFORM(SDO_GEOMETRY(2001, 4326, SDO_POINT_TYPE(s.longitude, s.latitude, NULL), NULL, NULL), 32652),
	               1
	                ) / 1000, 2) AS distance
	    FROM store s
	    WHERE storeName LIKE '%' || #{keyword, jdbcType=VARCHAR} || '%'
	    ORDER BY 
	    <choose>
	    	<when test="orderType == 'createdAt'">
	            createdAt ASC
	        </when>
	        <when test="orderType == 'modifiedAt'">
	            modifiedAt DESC
	        </when>
	        <when test="orderType == 'likes'">
	            totalReview DESC, totalRating DESC, likes DESC
	        </when>
	        <when test="orderType == 'distance'">
	            distance ASC
	        </when>
	        <otherwise>
	            storeNo DESC
	        </otherwise>
	    </choose>
	    OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
	</select>
	
	<!-- yunbin -->
<!-- 	<select id="getStoreNameByStoreNo" resultType="String"> -->
<!-- 		SELECT storename AS storeName FROM WHERE STORENO = #{storeNo} -->
<!-- 	</select> -->
	
	<delete id="deleteStore">
		DELETE FROM store WHERE storeno=#{storeNo} 
	</delete>
	
	<delete id="deleteStoreByUsername">
		delete from store where member_username=#{username}
	</delete>
	
	<select id="getStoresByUsername" resultMap="storeResultMap">
		select *
		from store
		where member_username=#{username}
	</select>
	
	<!-- leejongseop -->
	<select id="getStoresByPosition" resultMap="storeResultMap">
		<bind name="pattern" value="'%' + position + '%'" />
		SELECT 
			* 
		FROM STORE 
		WHERE ADDRESS LIKE #{pattern}
	</select>
	
</mapper>